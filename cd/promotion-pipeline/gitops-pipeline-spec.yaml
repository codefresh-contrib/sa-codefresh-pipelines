version: '1.0'
kind: pipeline
metadata:
  name: gitops-promotion
  shortName: gitops-promotion
  deprecate: {}
  labels:
    tags:
      - cd
spec:
  triggers:
    - name: microservice-a-pr-merge
      type: git
      repo: <github org name>/microservice-a
      events:
        - pullrequest.merged
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /.*/gi
      branchRegexInput: regex
      pullRequestTargetBranchRegex: /main/g
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: <GIT Pipeline Integration Name>
      contexts: []
      variables:
        - key: TARGET_REPO
          value: app-configs
        - key: TARGET_FILE
          value: development/kustomize/overlays/flask-ui/kustomization.yaml
        - key: TARGET_FILE_IMAGE_TAG_PLACEMENT
          value: '.images.[0].newTag'
    - name: microservice-b-pr-merge
      type: git
      repo: <github org name>/microservice-b
      events:
        - pullrequest.merged
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /.*/gi
      branchRegexInput: regex
      pullRequestTargetBranchRegex: /main/g
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: <GIT Pipeline Integration Name>
      contexts: []
      variables:
        - key: TARGET_REPO
          value: app-configs
        - key: TARGET_FILE
          value: development/kustomize/overlays/express/kustomization.yaml
        - key: TARGET_FILE_IMAGE_TAG_PLACEMENT
          value: '.images.[0].newTag'
    - name: microservice-b-promote-dev-to-prod
      type: git
      repo: <github org name>/app-configs
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: development/kustomize/overlays/express/kustomization.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: <GIT Pipeline Integration Name>
      contexts: []
      variables:
        - key: SOURCE_REPO
          value: app-configs
        - key: SOURCE_FILE
          value: development/kustomize/overlays/express/kustomization.yaml
        - key: SOURCE_FILE_IMAGE_TAG_PLACEMENT
          value: '.images.[0].newTag'
        - key: TARGET_REPO
          value: app-configs
        - key: TARGET_FILE
          value: production/kustomize/overlays/express/kustomization.yaml
        - key: TARGET_FILE_IMAGE_TAG_PLACEMENT
          value: '.images.[0].newTag'
    - name: microservice-a-promote-dev-to-prod
      type: git
      repo: <github org name>/app-configs
      events:
        - push.heads
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /main/gi
      branchRegexInput: regex
      modifiedFilesGlob: development/kustomize/overlays/flask-ui/kustomization.yaml
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: <GIT Pipeline Integration Name>
      contexts: []
      variables:
        - key: SOURCE_FILE
          value: development/kustomize/overlays/flask-ui/kustomization.yaml
        - key: SOURCE_REPO
          value: app-configs
        - key: SOURCE_FILE_IMAGE_TAG_PLACEMENT
          value: '.images.[0].newTag'
        - key: TARGET_FILE_IMAGE_TAG_PLACEMENT
          value: '.images.[0].newTag'
        - key: TARGET_REPO
          value: app-configs
        - key: TARGET_FILE
          value: production/kustomize/overlays/flask-ui/kustomization.yaml
  permitRestartFromFailedSteps: true
  clustersInfo:
    injectAll: true
    clusters: []
  variables: []
  contexts: []
  specTemplate:
    location: git
    repo: <github org name>/codefresh-pipelines
    path: ./cd/promotion-pipeline/gitops-codefresh.yaml
    revision: main
    context: <GIT Pipeline Integration Name>
  stages: []
  terminationPolicy: []
  externalResources: []
  concurrency: 1
  steps:
    clone:
      title: Cloning repository
      type: git-clone
      repo: 'https://github.com/codefresh-io/cli/'
      revision: master
      stage: clone
    build:
      title: Building Docker image
      type: build
      image_name: codefresh-io/cli
      working_directory: '${{clone}}'
      tag: latest
      dockerfile: Dockerfile
      stage: build
    test:
      title: Running test
      type: freestyle
      image: 'ubuntu:latest'
      working_directory: '${{clone}}'
      commands:
        - ls
      stage: test

