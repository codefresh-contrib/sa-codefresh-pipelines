version: '1.0'
kind: pipeline
metadata:
  name: Continuous Integration/microservices
  project: Continuous Integration
  projectId: 6452ba5994cae6ff5de5ddf2
  revision: 12
  accountId: 64515228ef68b36109127c87
  created_at: '2023-05-03T19:48:51.785Z'
  updated_at: '2023-05-05T21:05:19.335Z'
  shortName: microservices
  deprecate: {}
  labels:
    tags:
      - ci
  originalYamlString: |+
    # More examples of Codefresh YAML can be found at
    # https://codefresh.io/docs/docs/yaml-examples/examples/

    version: "1.0"
    # Stages can help you organize your steps in stages
    stages:
      - "clone"
      - "build"
      - "test"

    steps:
      clone:
        title: "Cloning repository"
        type: "git-clone"
        repo: "https://github.com/codefresh-io/cli/"
        # Clone the master branch. Or, use ${{CF_BRANCH}} to get branch name from trigger
        # Learn more at https://codefresh.io/docs/docs/codefresh-yaml/variables/
        revision: "master"
        stage: "clone"

      build:
        title: "Building Docker image"
        type: "build"
        image_name: "codefresh-io/cli"
        working_directory: "${{clone}}"
        # Set 'latest' tag on the image. Or, use built-in variables
        # like ${{CF_BRANCH_TAG_NORMALIZED}} to use the current branch name/tag.
        tag: "latest"
        dockerfile: "Dockerfile"
        stage: "build"

      test:
        title: "Running test"
        type: "freestyle" # Run any command
        image: "ubuntu:latest" # The image in which command will be executed
        working_directory: "${{clone}}" # Running command where code cloned
        commands:
          - "ls"
        stage: "test"

  id: 6452baa394cae6e513e5ddf4
spec:
  triggers:
    - name: express
      type: git
      repo: povadmin-45cbc49/express
      events:
        - push.heads
        - pullrequest.opened
        - pullrequest.synchronize
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /^((?!main)).*/gi
      branchRegexInput: regex
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github
      contexts: []
      variables: []
      lastExecutionDate: '2023-05-08T19:40:29.311Z'
      status: verified
      id: 6452c85894cae64572e5de0e
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/h5AahBC6Gk'
      secret: **************
    - name: flask-ui
      type: git
      repo: povadmin-45cbc49/flask-ui
      events:
        - push.heads
        - pullrequest.opened
        - pullrequest.synchronize
      pullRequestAllowForkEvents: false
      commentRegex: /.*/gi
      branchRegex: /^((?!main)).*/gi
      branchRegexInput: regex
      provider: github
      disabled: false
      options:
        noCache: false
        noCfCache: false
        resetVolume: false
      verified: true
      context: github
      contexts: []
      variables: []
      lastExecutionDate: '2023-05-09T15:22:21.055Z'
      status: verified
      id: 6452c86f32f12c476b7c0c84
      endpoint: 'https://g.codefresh.io/api/providers/github/hook/6KxxcDnpgh'
      secret: **************
  permitRestartFromFailedSteps: true
  clustersInfo:
    injectAll: true
    clusters: []
  variables: []
  contexts: []
  specTemplate:
    location: git
    repo: povadmin-45cbc49/codefresh-pipelines
    path: ./ci/microservices.yaml
    revision: main
    context: github
  stages: []
  terminationPolicy: []
  externalResources: []
  steps:
    clone:
      title: Cloning repository
      type: git-clone
      repo: 'https://github.com/codefresh-io/cli/'
      revision: master
      stage: clone
    build:
      title: Building Docker image
      type: build
      image_name: codefresh-io/cli
      working_directory: '${{clone}}'
      tag: latest
      dockerfile: Dockerfile
      stage: build
    test:
      title: Running test
      type: freestyle
      image: 'ubuntu:latest'
      working_directory: '${{clone}}'
      commands:
        - ls
      stage: test

